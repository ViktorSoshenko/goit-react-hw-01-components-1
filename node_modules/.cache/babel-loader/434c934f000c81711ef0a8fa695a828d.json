{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042E\\u043B\\u044F\\\\Desktop\\\\TUTORIAL\\\\goit-react-hw-01-components-1\\\\src\\\\components\\\\CryptoHistory\\\\CryptoHistory.jsx\";\nimport PropTypes from 'prop-types';\nimport { BaseTable, THead, Th, Tr, Td } from './CryptoHistory.styled';\nimport { formatDate } from 'helpers/formatDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CryptoHistory = _ref => {\n  let {\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(BaseTable, {\n    children: [/*#__PURE__*/_jsxDEV(THead, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(Th, {\n          children: \"\\u2116\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"PRICE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"AMOUNT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"DATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: items.map((_ref2, index) => {\n        let {\n          id,\n          price,\n          amount,\n          date\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = CryptoHistory;\nCryptoHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    price: PropTypes.number.isRequired,\n    amount: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoHistory\");","map":{"version":3,"sources":["C:/Users/Юля/Desktop/TUTORIAL/goit-react-hw-01-components-1/src/components/CryptoHistory/CryptoHistory.jsx"],"names":["PropTypes","BaseTable","THead","Th","Tr","Td","formatDate","CryptoHistory","items","map","index","id","price","amount","date","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,QAA6C,wBAA7C;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AAAA,6BACE;AAAA,gCACE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAU,QAA8BC,KAA9B,KAAwC;AAAA,YAAvC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA,MAAb;AAAqBC,UAAAA;AAArB,SAAuC;AACjD,4BACE,QAAC,EAAD;AAAA,kCACE,QAAC,EAAD;AAAA,sBAAKJ,KAAK,GAAG;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,EAAD;AAAA,sBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,EAAD;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,EAAD;AAAA,sBAAKP,UAAU,CAACQ,IAAD;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASH,EAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1BM;KAAMJ,a;AA4BbA,aAAa,CAACQ,SAAd,GAA0B;AACxBP,EAAAA,KAAK,EAAER,SAAS,CAACgB,OAAV,CACLhB,SAAS,CAACiB,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEX,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,KAAK,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC,UAFV;AAGdN,IAAAA,MAAM,EAAEb,SAAS,CAACkB,MAAV,CAAiBC,UAHX;AAIdL,IAAAA,IAAI,EAAEd,SAAS,CAACoB,MAAV,CAAiBD;AAJT,GAAhB,CADK,EAOLA;AARsB,CAA1B","sourcesContent":["import PropTypes from 'prop-types';\nimport { BaseTable, THead, Th, Tr, Td } from './CryptoHistory.styled';\nimport { formatDate } from 'helpers/formatDate';\n\nexport const CryptoHistory = ({ items }) => {\n  return (\n    <BaseTable>\n      <THead>\n        <tr>\n          <Th>№</Th>\n          <Th>PRICE</Th>\n          <Th>AMOUNT</Th>\n          <Th>DATE</Th>\n        </tr>\n      </THead>\n\n      <tbody>\n        {items.map(({ id, price, amount, date }, index) => {\n          return (\n            <Tr key={id}>\n              <Td>{index + 1}</Td>\n              <Td>{price}</Td>\n              <Td>{amount}</Td>\n              <Td>{formatDate(date)}</Td>\n            </Tr>\n          );\n        })}\n      </tbody>\n    </BaseTable>\n  );\n};\n\nCryptoHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      price: PropTypes.number.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}