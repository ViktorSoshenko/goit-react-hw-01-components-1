{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042E\\u043B\\u044F\\\\Desktop\\\\TUTORIAL\\\\goit-react-hw-01-components-1\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport { StatisticItem } from 'components';\nimport { StatisticsList, StatisticTitle } from './Statistics.styled'; // import { FaRegThumbsUp } from 'react-icons/fa';\n// import { MdPeople, MdOutlineProductionQuantityLimits } from 'react-icons/md';\n// import { GiTreeDoor } from 'react-icons/gi';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst icons = [/*#__PURE__*/_jsxDEV(FaRegThumbsUp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(MdPeople, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(MdOutlineProductionQuantityLimits, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(GiTreeDoor, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this)];\nexport const Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [title && /*#__PURE__*/_jsxDEV(StatisticTitle, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsList, {\n      children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(StatisticItem, {\n        title: stat.title,\n        total: stat.total,\n        icon: icons[index]\n      }, stat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/Users/Юля/Desktop/TUTORIAL/goit-react-hw-01-components-1/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","StatisticItem","StatisticsList","StatisticTitle","icons","Statistics","title","stats","map","stat","index","total","id","propTypes","string","arrayOf","shape","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,qBAA/C,C,CACA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAG,cACZ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,QADY,eAEZ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QAFY,eAGZ,QAAC,iCAAD;AAAA;AAAA;AAAA;AAAA,QAHY,eAIZ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QAJY,CAAd;AAOA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAC9C,sBACE;AAAA,eACGD,KAAK,iBAAI,QAAC,cAAD;AAAA,gBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,YADZ,eAGE,QAAC,cAAD;AAAA,gBACGC,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,aAAD;AAEE,QAAA,KAAK,EAAED,IAAI,CAACH,KAFd;AAGE,QAAA,KAAK,EAAEG,IAAI,CAACE,KAHd;AAIE,QAAA,IAAI,EAAEP,KAAK,CAACM,KAAD;AAJb,SACOD,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgBD,CAjBM;KAAMP,U;AAmBbA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,KAAK,EAAEN,SAAS,CAACc,MADI;AAErBP,EAAAA,KAAK,EAAEP,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,KAAV,CAAgB;AAAEJ,IAAAA,EAAE,EAAEZ,SAAS,CAACc,MAAV,CAAiBG;AAAvB,GAAhB,CAAlB,EACJA;AAHkB,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport { StatisticItem } from 'components';\nimport { StatisticsList, StatisticTitle } from './Statistics.styled';\n// import { FaRegThumbsUp } from 'react-icons/fa';\n// import { MdPeople, MdOutlineProductionQuantityLimits } from 'react-icons/md';\n// import { GiTreeDoor } from 'react-icons/gi';\nconst icons = [\n  <FaRegThumbsUp />,\n  <MdPeople />,\n  <MdOutlineProductionQuantityLimits />,\n  <GiTreeDoor />,\n];\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <>\n      {title && <StatisticTitle>{title}</StatisticTitle>}\n\n      <StatisticsList>\n        {stats.map((stat, index) => (\n          <StatisticItem\n            key={stat.id}\n            title={stat.title}\n            total={stat.total}\n            icon={icons[index]}\n          />\n        ))}\n      </StatisticsList>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\n    .isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}